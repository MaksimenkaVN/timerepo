# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: time_app_mysql_1
  namespace: default
  labels:
    app: time_app_mysql_1
spec:
  selector:
    matchLabels:
      app: time_app_mysql_1
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time_app_mysql_1
    spec:
      containers:
      - name: time_app_mysql_1
        image: mysql
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306, 33060
          name: mysql
        volumeMounts:
        - name: time-app_mysql_data_pub
          mountPath: /var/lib/mysql
      volumes:
        - name: time-app_mysql_data_pub
          hostPath:
            path: /tmp/mysql
      restartPolicy: Always
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: default
spec:
  selector:
    app: mysql
  type: ClusterIP
  ports:
  - name: mysql
    protocol: TCP
    port: 3306
    targetPort: 3306
---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: time-app_frontend_1
  namespace: default
  labels:
    app: time-app_frontend_1
spec:
  selector:
    matchLabels:
      app: time-app_frontend_1
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time-app_frontend_1
    spec:
      containers:
      - name: time-app_frontend_1
        image: maksimenkavn/time-app-frontend-dev
        envFrom:
        - configMapRef:
            name: time-app_frontend_1
        ports:
        - containerPort: 3000
          name: time-app_frontend_1
      restartPolicy: Always
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: time-app_frontend_1
  namespace: default
spec:
  selector:
    app: time-app_frontend_1
  type: ClusterIP
  ports:
  - name: time-app_frontend_1
    protocol: TCP
    port: 3000
    targetPort: 3000
---
# https://kubernetes.io/docs/concepts/configuration/configmap/
kind: ConfigMap
apiVersion: v1
metadata:
  name: time-app_frontend_1
  namespace: default
data:
# POST_SERVICE_HOST: post.default.svc.cluster.local
  POST_SERVICE_PORT: '3000'  
---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: time-app_api_1
  namespace: default
  labels:
    app: time-app_api_1
spec:
  selector:
    matchLabels:
      app: time-app_api_1
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time-app_api_1
    spec:
      containers:
      - name: time-app_api_1
        image: maksimenkavn/time-app-api-dev
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: time-app_api_1
        ports:
        - containerPort: 5000
          name: time-app_api_1
      restartPolicy: Always
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: time-app_api_1
  namespace: default
spec:
  selector:
    app: time-app_api_1
  type: ClusterIP
  ports:
  - name: time-app_api_1
    protocol: TCP
    port: 5555
    targetPort: 5000
---
# https://kubernetes.io/docs/concepts/configuration/configmap/
kind: ConfigMap
apiVersion: v1
metadata:
  name: time-app_api_1
  namespace: default
data:
# COMMENT_DATABASE_HOST: post_db.default.svc.cluster.local
# COMMENT_DATABASE: time-app_api_1
---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: time-app_adminer_1
  namespace: default
  labels:
    app: time-app_adminer_1
spec:
  selector:
    matchLabels:
      app: time-app_adminer_1
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time-app_adminer_1
    spec:
      containers:
      - name: time-app_adminer_1
        image: adminer
        imagePullPolicy: IfNotPresent        
        ports:
        - containerPort: 8080
          name: time-app_adminer_1
      restartPolicy: Always
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: time-app_adminer_1
  namespace: default
spec:
  selector:
    app: time-app_adminer_1
  type: ClusterIP
  ports:
  - name: time-app_adminer_1
    protocol: TCP
    port: 8888
    targetPort: 8080
---